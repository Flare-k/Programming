select(model,fl,price_fl) %>%
head(10)
library(dplyr)
update("dplyr")
update(dplyr)
search()
searchpaths()
.libPaths()
update.packages(dplyr)
update.packages("dplyr")
update.packages("dplyr")
update.packages("dplyr")
library(ggplot2)
mpg
mpg %>% filter(manufacturer %in% c("audi", "jeep"))
ls()
rm(list = ls())
ls()
mpg <- as.data.frame(ggplot2::mpg)
mpg
cyp18low <- mpg %>% filter(cty < 18)
cty18low <- mpg %>% filter(cty < 18)
cty18up <- mpg %>% filter(cty > 18)
cty18 <-  mpg %>% filter(cty == 18)
View(cty18low)
list("도시연비18미만" = cty18low, "도시연비18초과" = cty18up, "도시연비18" = cty18)
list("도시연비18미만" = nrows(cty18low), "도시연비18초과" = nrows(cty18up), "도시연비18" = nrows(cty18))
list("도시연비18미만" = nrow(cty18low), "도시연비18초과" = nrow(cty18up), "도시연비18" = nrow(cty18))
View(list("도시연비18미만" = nrow(cty18low), "도시연비18초과" = nrow(cty18up), "도시연비18" = nrow(cty18)))
mpg %>%
filter(cty > 18) %>%
select(manufacturer, hwy) %>%
head(10)
mpg %>%
filter(cty > 18) %>%
select(manufacturer, hwy, cty) %>%
head(10)
mpg %>%
filter(cty >= 18) %>%
select(manufacturer, hwy, cty) %>%
head(10)
mpg %>%
filter(cty > 18) %>%
select(manufacturer, hwy, cty) %>%
head(10)
mpg %>%
filter(cty > 18) %>%
select(manufacturer, hwy, cty)
mpg %>%
filter(cty > 18) %>%
select(manufacturer$audi, hwy, cty)
mpg %>%
filter(cty > 18) %>%
select(manufacturer, hwy, cty)
mpg %>%
filter(cty > 18) %>%
select(which(manufacturer == "audi"), hwy, cty)
mpg %>%
filter(cty > 18) %>%
select(manufacturer, hwy, cty)
mpg %>%
filter(cty > 18) %>%
select(manufacturer == "audi", hwy, cty)
mpg %>%
filter(cty > 18) %>%
select(manufacturer, hwy, cty)
mpg %>%
filter(manufacturer == "audi", cty < 18) %>%
select(manufacturer, hwy, cty)
table(mpg)
levels(mpg)
mpg
mpg %>%
filter(manufacturer == "hyundai") %>%
select(manufacturer, tear, cty, hwy) %>%
mutate(avg = (cty+hwy)/2) %>%
filter(arrange(desc(avg))) %>%
head(10)
mpg %>%
filter(manufacturer == "hyundai") %>%
select(manufacturer, year, cty, hwy) %>%
mutate(avg = (cty+hwy)/2) %>%
filter(arrange(desc(avg))) %>%
head(10)
mpg %>%
filter(manufacturer == "hyundai") %>%
select(manufacturer, year, cty, hwy) %>%
mutate(avg = (cty+hwy)/2) %>%
head(10)
head(10)
mpg %>%
filter(manufacturer == "hyundai") %>%
select(manufacturer, year, cty, hwy) %>%
mutate(avg = (cty+hwy)/2) %>%
filter(arrange(desc(avg))) %>%
head(10)
mpg %>%
filter(manufacturer == "hyundai") %>%
select(manufacturer, year, cty, hwy) %>%
mutate(avg = (cty+hwy)/2) %>%
head(10)
mpg %>%
filter(manufacturer == "hyundai") %>%
select(manufacturer, year, cty, hwy) %>%
mutate(avg = (cty+hwy)/2) %>%
arrange(desc(avg)) %>%
head(10)
mpg %>%
filter(manufacturer == "hyundai") %>%
select(manufacturer, year, cty, hwy) %>%
mutate(avg = (cty+hwy)/2) %>%
arrange(desc(avg), desc(cty)) %>%
head(10)
exam <- data.frame(class = c(2,1,2,1,1,2),
english = c(98, 97, 86, 98, 80, 89),
math = c(50, 60, 78, 58, 65, 98))
exam
inf1 <- data.frame(ID=c(1,2,3,4,6,7),
SEX=c("F","F","M","F","M","F"),
height=c(180,175,166,163,185,155))
inf2 <- data.frame(ID=c(1,2,3,5,7,8),
weight=c(70,65,55,50,85,45))
inf1;inf2
inf_inner <- inner_join(inf1, inf2, by = "ID")
inf_inner
View(inf_inner)
inf_fullinner <- full_inner(inf1, inf2, by = "ID")
full_inner <- full_join(inf1, inf2, by = "ID")
View(full_inner)
full_inner
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
arrange(desc(avg)) %>%
head(5)
mpg$class
levels(mpg$class)
table(mpg$class)
#회사별로 “suv” 자동차의 도시 및
#고속도로 통합 연비 평균을 구해
#내림차순으로 정렬하고,
#1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
arrange(desc(avg)) %>%
head(5)
#회사별로 “suv” 자동차의 도시 및
#고속도로 통합 연비 평균을 구해
#내림차순으로 정렬하고,
#1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(5)
table(mpg$manufacturer)
#회사별로 “suv” 자동차의 도시 및
#고속도로 통합 연비 평균을 구해
#내림차순으로 정렬하고,
#1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "compact") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(5)
#회사별로 “suv” 자동차의 도시 및
#고속도로 통합 연비 평균을 구해
#내림차순으로 정렬하고,
#1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(5)
# 회사별로 “suv” 자동차의
# 도시 및 고속도로 통합 연비 평균을 구해
# 내림차순으로 정렬하고,
# 1~5위 출력하기
View(mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(5))
# 회사별로 “suv” 자동차의
# 도시 및 고속도로 통합 연비 평균을 구해
# 내림차순으로 정렬하고,
# 1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(10)
# 회사별로 “suv” 자동차의
# 도시 및 고속도로 통합 연비 평균을 구해
# 내림차순으로 정렬하고,
# 1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(15)
# 회사별로 “suv” 자동차의
# 도시 및 고속도로 통합 연비 평균을 구해
# 내림차순으로 정렬하고,
# 1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(15)
# 회사별로 “suv” 자동차의
# 도시 및 고속도로 통합 연비 평균을 구해
# 내림차순으로 정렬하고,
# 1~5위 출력하기
View(mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(15))
# 회사별로 “suv” 자동차의
# 도시 및 고속도로 통합 연비 평균을 구해
# 내림차순으로 정렬하고,
# 1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(5)
# 회사별로 “suv” 자동차의
# 도시 및 고속도로 통합 연비 평균을 구해
# 내림차순으로 정렬하고,
# 1~5위 출력하기
mpg %>%
select(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(5)
# 회사별로 “suv” 자동차의
# 도시 및 고속도로 통합 연비 평균을 구해
# 내림차순으로 정렬하고,
# 1~5위 출력하기
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(avg = (cty+hwy)/2) %>%
summarise(mean_avg = mean(avg)) %>%
arrange(desc(mean_avg)) %>%
head(5)
mpg$fl
fuel <- data.frame(fl = c("c", "d", "e", "p", "r"),
price_fl = c(2.35, 2.38, 2.11, 2.76, 2.22),
stringAsFactors = F)
fuel
mpg_left <- left_join(mpg, fuel, by="fl")
fuel <- data.frame(fl = c("c", "d", "e", "p", "r"),
price_fl = c(2.35, 2.38, 2.11, 2.76, 2.22),
stringsAsFactors = F)
fuel
mpg_left <- left_join(mpg, fuel, by="fl")
View(mpg_left)
library("ggplot2")
diamonds
diamonds <- as.data.frame(ggplot2::diamonds)
diamonds
str(diamonds)
diamonds %>% filter(clarity == "SI2")
diamonds <- as.data.frame(ggplot2::diamonds, stringsAsFactors = F)
diamonds
diamonds %>% filter(clarity == "SI2")
str(diamonds)
diamonds <- as.data.frame(ggplot2::diamonds, stringsAsFactor = F)
str(diamonds)
diamonds <- as.data.frame(ggplot2::diamonds, stringsAsFactors = F)
diamonds
str(diamonds)
diamonds %>% filter(clarity == 'SI2' & price <= 400)
diamonds %>% filter(price <= 400)
#1
library("dplyr")
diamonds %>% filter(clarity == 'SI2' & price <= 400)
diamonds %>% filter(clarity == 'SI2' & price <= 400)
#2
diamonds %>% select(contains("a"))
#2
diamonds %>% select(contains("a"))
#2
diamonds %>% select(contains("a"))
#3
table(diamonds)
#3
levels(diamonds)
#3
diamonds
diamonds %>% group_by(cut) %>%
summarise(mean_price = mean(price)) %>%
arrange(mean_price) %>%
head(3)
diamonds %>% group_by(cut) %>%
summarise(mean_price = mean(price)) %>%
arrange(desc(mean_price)) %>%
head(3)
#4
bitamin <- data.frame(sex <- c('F', 'F', 'M', 'F', 'M', 'M', 'F', 'F', 'M', 'M'),
test <- c(65, 70, 77, 82, 97, 86, 55, 99, 67, 85))
bitamin
#4
bitamin <- data.frame(sex = c('F', 'F', 'M', 'F', 'M', 'M', 'F', 'F', 'M', 'M'),
test = c(65, 70, 77, 82, 97, 86, 55, 99, 67, 85))
bitamin
#5
bitamin$grade
bitamin
#4
bitamin <- data.frame(sex = c('F', 'F', 'M', 'F', 'M', 'M', 'F', 'F', 'M', 'M'),
test = c(65, 70, 77, 82, 97, 86, 55, 99, 67, 85))
bitamin
#5
bitamin %>%  mutate(grade = ifelse(bitamin$test < 65 , 'F',
ifelse(bitamin$test >= 65 & bitamin$test < 75, 'C',
ifelst(bitamin$test >= 75 & bitamin$test < 85, 'B', 'A')) ))
#5
bitamin %>%  mutate(grade = ifelse(bitamin$test < 65 , 'F',
ifelse(bitamin$test >= 65 & bitamin$test < 75, 'C',
ifelse(bitamin$test >= 75 & bitamin$test < 85, 'B', 'A')) ))
#5
bitamin_a <- bitamin %>%  mutate(grade = ifelse(bitamin$test < 65 , 'F',
ifelse(bitamin$test >= 65 & bitamin$test < 75, 'C',
ifelse(bitamin$test >= 75 & bitamin$test < 85, 'B', 'A')) ))
bitamin_a
#6
bitamin_a %>% group_by(sex) %>%
summarise(mean(test), sd(test), n(test))
#6
bitamin_a %>% group_by(sex) %>%
summarise(mean(test), sd(test), n())
bitamin_b <- data.frame(sex = c('F', 'M'),
code =c(1,2))
bitamin_b
bitamin_full <- full_inner(bitamin, bitamin_b, by = 'sex')
bitamin_full <- full_join(bitamin, bitamin_b, by = 'sex')
bitamin_full
bitamin_full %>%
arrange(code)
bitamin_full %>%
arrange(code, test)
bitamin_full %>%
arrange(code, desc(test))
storeA <- c(15,25,70,100)
mean(storeA)
J <- c(1,1,100,100)
H <- c(30,40,40,50)
mean(J); mean(H)
storeB <- c(10,20,50,70,100)
median(storeB)
median(storeA)
nums <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17)
#nums의 사분위수 산출
quantile(nums)
#상자그림
boxNums <- c(21,22,23,24,25)
quantile(boxNums)
boxplot(boxNums)
boxNums_1 <- c(16,21,21,23,24,25,30)
quantile(boxNums_1)
boxplot(boxNums_1)
boxNums_1 <- c(16,21,22,23,24,25,30)
quantile(boxNums_1)
boxplot(boxNums_1)
boxplot(storeB)
storeB <- storeB[storeB < 600]
boxplot(storeB)
boxplot(storeB)
storeB
boxplot(storeB)
storeA <- NULL
storeA <- c(20,21,23,22,26,28,35,35,41,42,43,45,44,45,46,47,47,46,47,58,58,59,60,56,67,67,80)
storeB <- NULL
storeB <- c(5,6,11,16,15,16,20,20,21,23,22,27,27,30,30,32,36,37,37,40,40,43,44,45,51,54,70)
boxplot(storeA, storeB, names = c("A식당", "B식당"))
points(c(mean(storeA), mean(storeB)), pch=2, col="red", cex=2)
points(c(mean(storeA), mean(storeB)), pch=1, col=1, cex=3)
boxplot(storeA, storeB, names = c("A식당", "B식당"))
points(c(mean(storeA), mean(storeB)), pch=1, col=1, cex=3)
storeB
mean(storeB)
storeB <- NULL
store B <- c(5,6,11,13,15,16,20,20,21,23,22,27,27,30,30,32,36,37,37,40,40,43,44,45,51,54,70)
storeB <- c(5,6,11,13,15,16,20,20,21,23,22,27,27,30,30,32,36,37,37,40,40,43,44,45,51,54,70)
mean(storeB)
quantile(storeB)
storeC <- c(5,5,5,12,10,11,20,20,20,20,20,21,20,30,32,31,31,31,36,40,40,51,61,51,61,61,70)
mean(storeC)
quantile(storeC)
boxplot(storeB, storeC, names=c("B식당", "C식당"))
boxplot(storeB, storeC, names=c("B식당", "C식당")))
boxplot(storeB, storeC, names=c("B식당", "C식당"))
bpdat <- c(1,50,50,50,100,100,100,150)
boxplot(bpdat)
boxplot(bpdat)
boxNums <- c(16,21,22,23,24,25,30)
boxNums
boxplot(boxNums)
boxplot(boxNums, range=2)
boxplot(boxNums)
boxplot(boxNums, range=2)
iris
boxplot(iris$Sepal.Length~iris$Species)
nums
hist(nums, main='숫자의분포', xlab='숫자', ylab='분포')
hist(nums,4)
hist(nums,6)
hist(nums, breaks = c(0,2,9,15,17))
var(storeB)
var(storeC)
sd(storeB)
sd(storeC)
bloodType <- c('A', 'B', 'A', 'AB', "O", 'A', 'O','B','A','O',
'O','B','O','A','AB','B','O','A','A','B')
length(bloodType)
table(bloodType)
model_table <- table(bloodType)
prop.table(model_table)
table_bloodType <- table(bloodType)
table_bloodType
names(table_bloodType)
sum(table_bloodType)
addmargins(table(bloodType))
pie(x=table(bloodType))
pie(x=table(bloodType)
,labels = c("A", "AB", "B","O")
,col=c("chocolatel", "chartreuse2", "darkgoldenrod1", "darkorchid1")
,lty=2
,main="이슬반 혈액형 분포")
pie(x=table(bloodType)
,labels = c("A", "AB", "B","O")
,col=c("chocolate1", "chartreuse2", "darkgoldenrod1", "darkorchid1")
,lty=2
,main="이슬반 혈액형 분포")
pie(x=table(bloodType)
,labels = c("A", "AB", "B","O")
,col=c("chocolate1", "chartreuse2", "darkgoldenrod1", "darkorchid1")
,lty=2
,main="이슬반 혈액형 분포")
color()
colors()
pie(x=table(bloodType), col=rainbow(4))
barplot(table(bloodType))
barplot(table(bloodType),
names.arg = c("A형", "AB형", "B형", "O형"),
main = "현우반의 혈액형 분포",
xlab = "혈액형",
ylab = "학생수",
col=heat.colors(4))
classDF <- data.frame(name = c('1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20'),
gender = c('M', 'M', 'F','M','M','F','F','M','M','F','M','F','M','M','F','F','M','M','M','F'),
bloodType = c('A','B','A','AB','O','A','O','B','A','O','O','B','O','A','AB','B','O','A','A','B'))
str(classDF)
classDF
str(classDF)
head(classDF[,c(2,3)])
table(classDF[,c(2,3)])
addmargins(table(classDF[,c(2,3)]))
classTable <- table(classDF[,c(2,3)])
barplot(classTable)
barplot(classTable, legend=T)
barplot(classTable, legend=T, ylim=c(0,8))
barplot(classTable, legend=T, ylim=c(0,8),
col=c("skyblue", "lightpink"))
barplot(classTable, legend=T, ylim=c(0,8),
col=c("skyblue", "lightpink"),
beside = T)
barplot(classTable, legend=T, ylim=c(0,8),
col=c("skyblue", "lightpink"))
barplot(classTable, legend=T, ylim=c(0,8),
col=c("skyblue", "lightpink"),
beside = T)
library(data.table)
library(tidyverse)
getwd()
setwd("/Users/noblyan/Desktop/따릉이")
getwd()
train_final <- fread("/Users/noblyan/Desktop/따릉이//train_final.csv", header = T)
test_final <- fread("/Users/noblyan/Desktop/따릉이/test_final.csv", header = T)
View(train_final)
table(is.na(train_final$id))
table(is.na(train_final$hour))
table(is.na(train_final$hour_bef_temperature))
train_final$hour_bef_temperature <- ifelse(is.na(train_final$hour_bef_temperature), as.integer(mean(train_final$hour_bef_temperature, na.rm = T)), train_final$hour_bef_temperature)
table(is.na(train_final$hour_bef_temperature))
